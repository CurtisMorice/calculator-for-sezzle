{"version":3,"sources":["components/CalculatorComponents/NumberProvider.jsx","components/CalculatorComponents/BackButton.jsx","components/styles/Styles.js","components/CalculatorComponents/CalcList.jsx","components/CalculatorComponents/NumberButton.jsx","components/CalculatorComponents/FunctionButton.jsx","components/CalculatorComponents/ClearButton.jsx","components/CalculatorComponents/Display.jsx","components/CalculatorComponents/EqualButton.jsx","components/CalculatorComponents/NegativeButton.jsx","components/CalculatorComponents/Calculator.jsx","App/app.jsx","serviceWorker.js","index.js"],"names":["socket","io","NumberContext","React","createContext","NumberProvider","props","useState","number","setNumber","storedNumber","setStoredNumber","functionType","setFunctionType","calculations","setCalculations","useEffect","on","data","getCalculations","handleSetStoredValue","a","fetch","result","json","calc_obj","Provider","value","doMath","finalNumber","date","Date","toUTCString","Math","round","parseFloat","parseInt","number1","operator","number2","total","created_at","console","log","method","headers","body","JSON","stringify","then","response","emit","status","Error","catch","err","handleBackButton","deletedNumber","slice","length","handleClearValue","handleSetCalcFunction","type","handleSetDisplayValue","num","includes","replace","handleToggleNegative","positiveNumber","children","BackButton","useContext","className","onClick","CalculatorStyles","styled","div","DisplayStyles","CalcListStyle","CalcList","setResponse","map","item","key","id","style","color","fontSize","NumberButton","buttonValue","e","FunctionButton","ClearButton","Display","undefined","EqualButton","isValid","disabled","NegativeButton","Calculator","numberButtonHasBeenHit","setNumberButtonHasBeenHit","functionButtonHasBeenHit","setFunctionButtonHasBeenHit","lastButtonWasFunction","setLastButtonWasFunction","handleNumberButtonClick","handleFunctionButtonClick","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.8076cf30.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport io from 'socket.io-client'\nconst socket = io('/');\n\nexport const NumberContext = React.createContext(0);\n\nexport function NumberProvider(props) {\n  const [number, setNumber] = useState(\"\");\n  const [storedNumber, setStoredNumber] = useState(\"\"); //sets the numbers used in the calculation\n  const [functionType, setFunctionType] = useState(\"\"); // grabs and sets the operator used for the calculation\n  const [calculations, setCalculations] = useState([]); // sets the object for the database\n\n  useEffect(() => {\n    socket.on('calculation-sent', (data) => {\n      getCalculations(data)\n    });\n  }, [calculations]);\n\n  const handleSetDisplayValue = (num) => {\n    if ((!number.includes(\".\") || num !== \".\") && number.length < 8) {\n      setNumber(`${ (number + num).replace(/^0+/, \"\") }`);\n    }\n  };\n\n  const handleSetStoredValue = () => {\n    setStoredNumber(number);\n    setNumber(\"\");\n  };\n\n  const handleClearValue = () => {\n    setNumber(\"\");\n    setStoredNumber(\"\");\n    setFunctionType(\"\");\n  };\n\n  const handleBackButton = () => {\n    if (number !== \"\") {\n      const deletedNumber = number.slice(0, number.length - 1);\n      setNumber(deletedNumber);\n    }\n  };\n  // Grabs the operation type and sets it in state for the doMath() below.\n  const handleSetCalcFunction = (type) => {\n    if (number) {\n      setFunctionType(type);\n      handleSetStoredValue();\n    }\n    if (storedNumber) {\n      setFunctionType(type);\n    }\n  };\n  // Handles the state of the number from -neg to +pos\n  const handleToggleNegative = () => {\n    if (number) {\n      if (number > 0) {\n        setNumber(`-${ number }`);\n      } else {\n        const positiveNumber = number.slice(1);\n        setNumber(positiveNumber);\n      }\n    } else if (storedNumber > 0) {\n      setStoredNumber(`-${ storedNumber }`);\n    } else {\n      const positiveNumber = storedNumber.slice(1);\n      setStoredNumber(positiveNumber);\n    }\n  };\n  const doMath = () => {\n    let finalNumber;\n    let calc_obj;\n    let d = new Date();\n    let date = d.toUTCString();\n    if (number && storedNumber) {\n      switch (functionType) {\n        case \"+\":\n          setStoredNumber(\n            `${\n            Math.round(\n              `${ (parseFloat(storedNumber) + parseFloat(number)) * 100 }`\n            ) / 100\n            }`\n          );\n\n          finalNumber = finalNumber = parseInt(storedNumber) + parseInt(number);\n          calc_obj = { number1: parseInt(storedNumber), operator: functionType, number2: parseInt(number), total: finalNumber, created_at: date };\n          console.log(\"adding\", finalNumber);\n          break;\n        case \"-\":\n          setStoredNumber(\n            `${\n            Math.round(\n              `${ (parseFloat(storedNumber) - parseFloat(number)) * 1000 }`\n            ) / 1000\n            }`\n          );\n          finalNumber = parseInt(storedNumber) - parseInt(number);\n          calc_obj = { number1: parseInt(storedNumber), operator: functionType, number2: parseInt(number), total: finalNumber, created_at: date };\n          // console.log(finalNumber);\n          break;\n        case \"/\":\n          setStoredNumber(\n            `${\n            Math.round(\n              `${ (parseFloat(storedNumber) / parseFloat(number)) * 1000 }`\n            ) / 1000\n            }`\n          );\n          finalNumber = parseInt(storedNumber) / parseInt(number);\n          calc_obj = { number1: parseInt(storedNumber), operator: functionType, number2: parseInt(number), total: finalNumber, created_at: date };\n          // console.log(finalNumber);\n          break;\n        case \"*\":\n          setStoredNumber(\n            `${\n            Math.round(\n              `${ parseFloat(storedNumber) * parseFloat(number) * 1000 }`\n            ) / 1000\n            }`\n          );\n          finalNumber = parseInt(storedNumber) * parseInt(number);\n          calc_obj = { number1: parseInt(storedNumber), operator: functionType, number2: parseInt(number), total: finalNumber, created_at: date };\n          // console.log(finalNumber);\n          break;\n        default:\n          break;\n      }\n      setNumber(\"\");\n    }\n\n    console.log(calc_obj);\n\n    // POST calc_obj to the db and fire getCalculations\n    fetch('/api/calculations', {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify(calc_obj)\n    }).then((response) => {\n      socket.emit('calc-passed', response)\n      if (response.status >= 400) {\n        throw new Error(\"Bad response from server\");\n      }\n      return response.json();\n    }).then((data) => {\n      socket.emit('calc-passed', data)\n    }).catch((err) => {\n      console.log(err)\n    });\n  };\n\n\n  //Get Call to populate CalcList\n  const getCalculations = async () => {\n    let result = await fetch(`/api/calculations`);\n    let calc_obj = await result.json();\n    setCalculations(calc_obj);\n  }\n\n  return (\n    <NumberContext.Provider\n      value={{\n        doMath,\n        functionType,\n        handleBackButton,\n        handleClearValue,\n        handleSetCalcFunction,\n        handleSetDisplayValue,\n        handleSetStoredValue,\n        handleToggleNegative,\n        calculations,\n        number,\n        storedNumber,\n        setNumber\n      }}\n    >\n      {props.children}\n    </NumberContext.Provider>\n  );\n};\n\n","import React, { useContext } from 'react';\nimport { NumberContext } from './NumberProvider';\n\n\nexport function BackButton() {\n  const { handleBackButton } = useContext(NumberContext);\n  return (\n    <button type=\"button\" className=\"white-button\" onClick={() => handleBackButton()}>\n      &#8592;\n    </button>\n  );\n};\n","import styled from 'styled-components';\n\nexport const CalculatorStyles = styled.div` background-color: #333;\nwidth: 100%;\nmin-height: 100vh;\ndisplay: grid;\njustify-items: center;\ngrid-template-rows: minmax(200px 350px) 1fr;\ngrid-template-columns: 1fr;\n\n.calculator-wrapper {\n  border: 10px solid azure;\n  padding: 10px;\n  border-radius: 10px;\n  @media (max-width: 800px) {\n    margin: 20px;\n    flex-direction: column;\n    justify-items: initial;\n  }\n}\n.outer-wrapper {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n @media (max-width: 800px) {\n  flex-direction: column;\n  padding-bottom: 50px;\n }\n}\n.display {\n  font-family: 'Orbitron', serif;\n  margin: 0 !important;\n  width: 100%;\n\n  @media (max-width: 500px) {\n    width: 90%;\n    max-height: 275px;\n  }\n\n  h1 {\n    font-size: 3.5rem;\n    color: #333;\n    text-align: center;\n\n    @media (max-width: 800px) {\n      font-size: 2rem;\n    }\n  }\n}\n\n.number-pad {\n  /* grid-area: numbers; */\n  display: grid;\n  grid-gap: 10px;\n  grid-template-columns: repeat(4, 1fr);\n  padding: 10px;\n  width: 500px;\n  margin: 0 auto;\n\n  @media (max-width: 500px) {\n    width: 100%;\n    margin: 0;\n    padding: 0;\n    grid-gap: 15px;\n  }\n\n  button {\n    cursor: pointer;\n    width: 100%;\n    height: 80px;\n    border-radius: 20px;\n    border: 3px solid white;\n    font-size: 2rem;\n    color: #333;\n    font-family: 'Orbitron', serif;\n    background: azure;\n\n    &:focus {\n      outline: none;\n    }\n\n    &:hover {\n      border: 3px solid #dfe6e9;\n      font-weight: 500;\n    }\n    @media (max-width: 500px) {\n      height: 70px;\n      font-size: 2.5rem;\n    }\n\n  button.function-button {\n    background-color: #2d3436;\n    color: #fff;\n  }\n\n  button.white-button {\n    color: #2d3436;\n    background-color: white;\n  }\n}\n\n.zero-button {\n  grid-column: 1/3;\n}\n\n`;\n\nexport const DisplayStyles = styled.div`\ndisplay: grid;\ngrid-template-rows: 90px 30px;\ngrid-template-columns: 1fr;\nborder: 4px solid white;\nmax-width: 450px;\nmargin: 10px auto;\nalign-items: center;\nborder-radius: 20px;\nbackground: azure;\n\n@media (max-width: 800px) {\n  width: 95%;\n  grid-template-rows: 60px 40px;\n}\n\n\nh2,\np {\n  text-align: center;\n  color: #333;\n}\n\nh2 {\n  font-size: 2.5rem;\n  margin: 0;\n  text-align: center;\n  border-bottom: 4px solid white;\n  padding: 15px 20px;\n\n  @media (max-width: 500px) {\n    font-size: 1.5rem;\n    padding: 10px;\n  }\n}\n\nh2.long-main-display {\n  font-size: 1.2rem;\n}\n\np {\n  margin: 5px 0;\n  font-size: 1.3rem;\n\n  @media (max-width: 500px) {\n    font-size: 0.8rem;\n  }\n}\n\np.long-stored-display {\n  font-size: 0.5rem;\n}\n\n`\nexport const CalcListStyle = styled.div`\nborder: 4px solid white;\nmax-width: 450px;\nmargin: 10px 20px;\nalign-items: center;\nborder-radius: 20px;\nbackground: azure;\nwidth: 450px;\nheight: 500px;\n@media (max-width: 500px) {\n  width : 90%;\n  display: flex;\n  flex-direction: column;\n  margin: 10px;\n}\nh1 {\n  width: 100%;\n  text-align: center;\n}\n`\n  ;","import React, { useContext, useEffect, useState } from \"react\";\nimport { CalcListStyle } from \"../styles/Styles\";\nimport { NumberContext } from './NumberProvider';\nimport io from 'socket.io-client'\nconst socket = io(\"https://calculator-sezzle.herokuapp.com/\");\n\nconst CalcList = () => {\n  const { calculations } = useContext(NumberContext);\n  const [response, setResponse] = useState(\"\");\n\n  useEffect(() => {\n    socket.on('calculation-sent', (data) => {\n      setResponse(data)\n    });\n\n  }, [response])\n\n  return (\n    <CalcListStyle className=\"calc-list-container\">\n      <h1>Calculations</h1>\n      <ul>\n        {calculations.map(item => {\n          return (\n            <li key={item.id} style={{ color: '#333', fontSize: '20px' }} >\n              {item.number1} {item.operator} {item.number2} = { item.total} & nbsp; {item.created_at}\n            </li>\n          );\n        })\n        }\n      </ul>\n    </CalcListStyle >\n  );\n}\nexport { CalcList };","import React, { useContext } from \"react\";\nimport { NumberContext } from \"./NumberProvider\";\n\nconst NumberButton = ({ buttonValue, onClick, e }) => {\n\n  const { handleSetDisplayValue } = useContext(NumberContext);\n  return (\n    <button type=\"button\" onClick={(e) => {\n      handleSetDisplayValue(buttonValue);\n      onClick(); // boolean check for = button not to disable =equal button before all values are passed\n    }\n    }>\n      {buttonValue}\n    </button>\n  );\n};\n\nexport { NumberButton };\n","import React, { useContext } from \"react\";\nimport { NumberContext } from \"./NumberProvider\";\n\nconst FunctionButton = ({ buttonValue, onClick\n}) => {\n  const { handleSetCalcFunction } = useContext(NumberContext);\n  return (\n    <button\n      className=\"function-button\"\n      type=\"button\"\n      onClick={() => {\n        handleSetCalcFunction(buttonValue);\n        onClick();// boolean check for = button not to disable =equal button before all values are passed\n      }\n      }\n    >\n      {buttonValue}\n    </button>\n  );\n};\n\nexport { FunctionButton };\n","import React, { useContext } from \"react\";\nimport { NumberContext } from \"./NumberProvider\";\n\nexport function ClearButton() {\n  const { handleClearValue } = useContext(NumberContext);\n  return (\n    <button\n      type=\"button\"\n      className=\"white-button\"\n      onClick={() => handleClearValue()}\n    >\n      C\n    </button>\n  );\n};","import React, { useContext } from \"react\";\nimport { NumberContext } from \"./NumberProvider\";\nimport { DisplayStyles } from \"../styles/Styles\";\n\nconst Display = () => {\n  const { number, storedNumber, functionType } = useContext(NumberContext);\n  return (\n    <DisplayStyles>\n      <h2\n        className={\n          storedNumber && storedNumber.length > 12\n            ? \"long-main-display\"\n            : undefined\n        }\n      >\n        {!number.length && !storedNumber ? \"0\" : number || storedNumber}\n      </h2>\n      <p\n        className={\n          storedNumber && storedNumber.length > 12\n            ? \"long-stored-display\"\n            : undefined\n        }\n      >\n        {!storedNumber\n          ? \"START CALCULATING\"\n          : `${ storedNumber } ${ functionType } ${ number }`}\n      </p>\n    </DisplayStyles>\n  );\n};\n\nexport { Display };\n","import React, { useContext } from \"react\";\nimport { NumberContext } from \"./NumberProvider\";\n\nconst EqualButton = ({ isValid }) => { // is valid is to disable or enable this button\n  const { doMath } = useContext(NumberContext);\n\n  return (\n    <button\n      className=\"white-button\"\n      disabled={!isValid}\n      type=\"button\"\n      onClick={\n        () => {\n          doMath()\n        }\n      }>\n      =\n    </button>\n  );\n\n};\nexport { EqualButton };\n","import React, { useContext } from \"react\";\nimport { NumberContext } from \"./NumberProvider\";\n\nconst NegativeButton = () => {\n  const { handleToggleNegative } = useContext(NumberContext);\n  return (\n    <button\n      type=\"button\"\n      className=\"white-button\"\n      onClick={() => handleToggleNegative()}\n    >\n      -/+\n    </button>\n  );\n};\n\nexport { NegativeButton };\n","import React, { useState } from \"react\";\nimport { NumberButton } from \"./NumberButton\";\nimport { FunctionButton } from \"./FunctionButton\";\nimport { ClearButton } from \"./ClearButton\";\nimport { Display } from \"./Display\";\nimport { EqualButton } from \"./EqualButton\";\nimport { BackButton } from \"./BackButton\";\nimport { NegativeButton } from \"./NegativeButton\";\nimport { CalcList } from './CalcList';\nimport { CalculatorStyles } from \"../styles/Styles\";\n\n\nexport function Calculator() {\n\n  const [numberButtonHasBeenHit, setNumberButtonHasBeenHit] = useState(false);\n  const [functionButtonHasBeenHit, setFunctionButtonHasBeenHit] = useState(false)\n  const [lastButtonWasFunction, setLastButtonWasFunction] = useState(false);\n  // methods to set isValid for EqualButton using state above.\n  const handleNumberButtonClick = () => {\n    setNumberButtonHasBeenHit(true);\n    setLastButtonWasFunction(false);\n  };\n  const handleFunctionButtonClick = () => {\n    setFunctionButtonHasBeenHit(true);\n    setLastButtonWasFunction(true);\n  };\n  const isValid = () => {\n    return numberButtonHasBeenHit && functionButtonHasBeenHit && !lastButtonWasFunction;\n  }\n  return (\n    <CalculatorStyles>\n      <div className=\"display\">\n        <h1 style={{ color: \"#fff\" }}>Calculator-Challenge for Sezzle by Curtis Morice</h1>\n        <Display />\n      </div>\n      <div className=\"outer-wrapper\">\n        <div className=\"calculator-wrapper\">\n          <div className=\"number-pad\">\n            <ClearButton />\n            <BackButton />\n            <NegativeButton />\n            <FunctionButton onClick={handleFunctionButtonClick} buttonValue=\"/\" />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={7} />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={8} />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={9} />\n            <FunctionButton onClick={handleFunctionButtonClick} buttonValue=\"*\" />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={4} />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={5} />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={6} />\n            <FunctionButton onClick={handleFunctionButtonClick} buttonValue=\"-\" />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={1} />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={2} />\n            <NumberButton onClick={handleNumberButtonClick} buttonValue={3} />\n            <FunctionButton onClick={handleFunctionButtonClick} buttonValue=\"+\" />\n            <div className=\"zero-button\">\n              <NumberButton onClick={handleNumberButtonClick} buttonValue={0} />\n            </div>\n            <NumberButton onClick={handleNumberButtonClick} buttonValue=\".\" />\n            <EqualButton isValid={isValid()} />\n          </div>\n        </div>\n        <CalcList />\n      </div>\n    </CalculatorStyles>\n  )\n};\n\n","import React from 'react';\nimport { Calculator } from 'components'; //components is the path alias created by webpack (https://webpack.js.org/configuration/resolve/)\nimport { NumberProvider } from 'components';\n\nfunction App() {\n  return (\n    < NumberProvider>\n      <Calculator />\n    </NumberProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App/app';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}